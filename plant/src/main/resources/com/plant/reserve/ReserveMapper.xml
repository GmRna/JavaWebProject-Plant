<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.plant.reserve.ReserveMapper">
	   
	<!-- 가드너 검색 -->
	<select id="searchGd" resultType="com.plant.reserve.ReserveVO" parameterType="com.plant.reserve.ReserveVO">
		SELECT 
			g.gd_no
			, g.gd_id
			, g.gd_name
			, g.gd_hp
			, gd_major1
			, gd_major2
			, gd_major3
			, gd_major4
			, gd_major5
			, gd_major6
			, gd_major7
			, g.gd_picorg
			, g.gd_picreal
			, (
				SELECT
					(sum(star)/count(star))
				FROM 
					review
				WHERE
					gd_no = g.gd_no
			) AS starAverage
			<if test="category != null and category != ''">
				<if test="category == 'manyReview' or category == 'littleReview'">
					, (
						SELECT 
							count(review) 
						FROM
							review
						WHERE
							gd_no = g.gd_no
					) AS reviewCount
				</if>
				<if test="category == 'manyCancel' or category == 'littleCancel'">
					, (
						SELECT 
							count(cancel_no)
						FROM 
							cancel
						WHERE
							gd_no = g.gd_no
					) AS cancelCount
				</if>
				<if test="category == 'manyReserve' or category == 'littelReserve'">
					, (
						SELECT 
							(count(rsv.reserve_no)-
								(SELECT 
									count(cancel_no) 
								FROM
									cancel c 
								WHERE 
									gd_no = g.gd_no
								)
							)
						FROM
							reservation rsv 
						WHERE 
							rsv.gd_no = g.gd_no
					) AS reserveCount
				</if>
			</if>
		FROM 
      		gd g
		<where>
			g.gd_acc = 1
			<if test="searchAbleaddr != null and searchAbleaddr !=''">
					AND g.gd_ableaddr Like '%${searchAbleaddr}%'
			</if>
			<if test="searchName != null and searchName !=''">
					AND g.gd_name = #{searchName}
			</if>
		</where>
			<if test="category != null and category != ''">
				<if test="category == 'manyReview'">
					ORDER BY reviewCount DESC
				</if>
				<if test="category == 'littleReview'">
					ORDER BY reviewCount ASC 
				</if>
				<if test="category == 'highStar'">
					ORDER BY starAverage DESC
				</if>
				<if test="category == 'lowStar'">
					ORDER BY starAverage ASC
				</if>
				<if test="category == 'manyCancel'">
					ORDER BY cancelCount DESC
				</if>
				<if test="category == 'littleCancel'">
					ORDER BY cancelCount ASC
				</if>
				<if test="category == 'manyReserve'">
					ORDER BY reserveCount DESC
				</if>
				<if test="category == 'littleReserve'">
					ORDER BY reserveCount ASC
				</if>
			</if>
	</select>
	
	<!-- 가드너 리뷰 검색 -->
	<select id="searchGdReview" resultType="com.plant.reserve.ReserveVO" parameterType="com.plant.reserve.ReserveVO">
		SELECT 
			review_no
			, review_date
			, review
			, review_answer
			, review_answerdate
			, star
			, user_no
			, (
				SELECT 
					user_nick
				FROM 
					user
				WHERE
					user_no = r.user_no
			) AS user_nick
		FROM
			review r
		WHERE
			gd_no = #{gd_no}
		ORDER BY star DESC
	</select>
	
	<!-- 케어종목 리스트 -->
	<select id="majorList" resultType="com.plant.reserve.ReserveVO" parameterType="com.plant.reserve.ReserveVO">
		SELECT 
			*
		FROM 
			major
	</select>
	
	<!-- 예약가능 내역 조회 -->
	<select id="selectReserveVal" resultType="com.plant.reserve.ReserveVO" parameterType="int">
		SELECT 
			r.reservable_no
			, r.reservable_date
			, r.reservable_hour
			, rm.reservable_major
		FROM 
			reservable r 
		INNER JOIN 
			reservableMajor rm 
		ON 
			r.reservable_no = rm.reservable_no
		WHERE 
			r.reservable_no = #{reserevable_no} 
	</select>
	
	<!-- 가드너 예약가능 일정 확인 -->
	<select id="searchGdReservable" resultType="com.plant.reserve.ReserveVO" parameterType="com.plant.reserve.ReserveVO">
		SELECT 
			r.reservable_no
			, r.reservable_date
			, r.reservable_hour
			, rm.reservable_major
		FROM 
			reservable r 
		INNER JOIN 
			reservableMajor rm 
		ON 
			r.reservable_no = rm.reservable_no 
		<where>
			reservable_do = 0
			AND r.gd_no = #{gd_no}
			<if test="selectDate != null and selectDate != ''">
				AND r.reservable_date = #{selectDate} 
			</if>
			<if test="dateStart != null and dateStart != '' and dateEnd != null and dateEnd != ''">
				AND (r.reservable_date BETWEEN #{dateStart} AND #{dateEnd})
			</if>
			<if test="dateStart == null or dateStart == '' and dateEnd != null and dateEnd != ''">
			<![CDATA[
				AND (r.reservable_date <= #{dateEnd})
			]]>
			</if>
			<if test="dateEnd == null or dateEnd == ''and dateStart != null and dateStart != ''">
			<![CDATA[
				AND (r.reservable_date >= #{dateStart})
			]]>
			</if>
			<if test="searchMajor != null and searchMajor !=''">
				AND rm.reservable_major Like '%${searchMajor}%'
			</if>
		</where>
		ORDER BY
			r.reservable_date ASC
			, r.reservable_hour ASC
	</select>
	
	<!-- 가드너 예약된 일정 확인 -->
	<select id="searchGdReserved" resultType="com.plant.reserve.ReserveVO" parameterType="com.plant.reserve.ReserveVO">
		SELECT 
			r.reservable_no
			, r.reservable_date
			, r.reservable_hour
			, rm.reservable_major
		FROM 
			reservable r 
		INNER JOIN 
			reservableMajor rm 
		ON 
			r.reservable_no = rm.reservable_no 
		<where>
			reservable_do = 1
			AND r.gd_no = #{gd_no}
			<if test="selectDate != null and selectDate != ''">
				AND r.reservable_date = #{selectDate} 
			</if>
			<if test="dateStart != null and dateStart != '' and dateEnd != null and dateEnd != ''">
				AND (r.reservable_date BETWEEN #{dateStart} AND #{dateEnd})
			</if>
			<if test="dateStart == null or dateStart == '' and dateEnd != null and dateEnd != ''">
			<![CDATA[
				AND (r.reservable_date <= #{dateEnd})
			]]>
			</if>
			<if test="dateEnd == null or dateEnd == ''and dateStart != null and dateStart != ''">
			<![CDATA[
				AND (r.reservable_date >= #{dateStart})
			]]>
			</if>
			<if test="searchMajor != null and searchMajor !=''">
				AND rm.reservable_major Like '%${searchMajor}%'
			</if>
		</where>
		ORDER BY
			r.reservable_date ASC
			, r.reservable_hour ASC
	</select>
	
	<!-- 케어진행 완료 수 -->
	<select id="completionCount" resultType="com.plant.reserve.ReserveVO" parameterType="com.plant.reserve.ReserveVO">
		SELECT
			count(completion_no) as completion_count
		FROM 
			completion
		WHERE
			gd_no = #{gd_no}
	</select>
	
	<!-- 가드너 프로필 상세보기 -->
	<select id="viewGd" resultType="com.plant.reserve.ReserveVO" parameterType="com.plant.reserve.ReserveVO">
		SELECT
			gd_no
			, gd_email
			, gd_name
			, ROUND((TO_DAYS(NOW()) - (TO_DAYS(left(gd_regnum ,length(gd_regnum) - 1 )))) / 365) AS gd_age
			, gd_hp
			, gd_regdate
			, gd_ableaddr
			, (
				SELECT
					gd_career
				FROM
					car
				WHERE
					gd_no = #{gd_no}
			) AS gd_career
			, gd_picorg
			, gd_picreal
			, (
				SELECT
					gd_certificate
				FROM
					cer
				WHERE
					gd_no = #{gd_no}
			) AS gd_certificate
			, gd_acc
			, gd_major1
			, gd_major2
			, gd_major3
			, gd_major4
			, gd_major5
			, gd_major6
			, gd_major7
			, (
				SELECT
					(sum(star)/count(star))
				FROM 
					review
				WHERE
					gd_no = #{gd_no}
			) AS starAverage
		FROM		 
			gd
		WHERE
			gd_no = #{gd_no} 
	</select>
	
	<!-- 유저 프로필 상세보기 -->
	<select id="user" resultType="com.plant.reserve.ReserveVO" parameterType="com.plant.reserve.ReserveVO">
		SELECT
			user_no
			, user_nick
			, user_id
			, user_email
			, user_name
			, user_regnum
			, user_postcode
			, user_addr1
			, user_addr2
			, user_hp
		FROM
			user
		WHERE
			user_no = #{user_no}
	</select>
	
	<!-- 예약 조회 -->
	<select id="viewReservation" resultType="com.plant.reserve.ReserveVO" parameterType="com.plant.reserve.ReserveVO">
		SELECT
			reserve_no
			, gd_no
			, user_no
			, reserve_date
			, reserve_hour
			, reserve_etc
			, reserve_time
		FROM
			reservation
		WHERE				
			reserve_no = #{reserve_no} AND reserve_pay = 1 AND reserve_cancel = 0
	</select>
	
	<!-- 유저 예약내역 확인 -->
	<select id="userReservation" resultType="com.plant.reserve.ReserveVO" parameterType="com.plant.reserve.ReserveVO">
		SELECT
			reserve_no
			, gd_no
			, user_no
			, reserve_date
			, reserve_hour 
			, reserve_time
			, (
				SELECT
					major
				FROM
					major
				WHERE
					major_no = r.major_no
			) AS major
			, (
				SELECT
					gd_name
				FROM
					gd
				WHERE
					gd_no = r.gd_no
			) AS gd_name
			, (
				SELECT
					gd_hp
				FROM
					gd
				WHERE
					gd_no = r.gd_no
			) AS gd_hp
		FROM
			reservation r
		WHERE				
			user_no = #{user_no} AND reserve_pay = 1 AND reserve_cancel = 0
	</select>
	
	<!-- 가드너 예약내역 확인 -->
	<select id="gdReservation" resultType="com.plant.reserve.ReserveVO" parameterType="com.plant.reserve.ReserveVO">
		SELECT
			reserve_no
			, gd_no
			, user_no
			, reservable_no
			, reserve_date
			, reserve_hour
			, reserve_etc
			, reserve_time
			, (
				SELECT
					major
				FROM
					major
				WHERE
					major_no = r.major_no
			) AS major
			, (
				SELECT
					user_name
				FROM
					user
				WHERE
					user_no = r.user_no
			) AS user_name
			, (
				SELECT
					user_nick
				FROM
					user
				WHERE
					user_no = r.user_no
			) AS user_nick
			, (
                SELECT
                    merchant_uid
                FROM
                	pay
                WHERE
                	reserve_no = r.reserve_no
            ) AS merchant_uid
		FROM
			reservation r
		WHERE				
			gd_no = #{gd_no} AND reserve_pay = 1 AND reserve_cancel = 0
	</select>
	
	<!-- 가드너 취소 확인 -->
	<select id="selectGdReservationCancel" resultType="com.plant.reserve.ReserveVO" parameterType="com.plant.reserve.ReserveVO">
		SELECT
			reserve_no
			, gd_no
			, user_no
			, reservable_no
			, reserve_date
			, reserve_hour
			, reserve_etc
			, reserve_time
			, (
				SELECT
					major
				FROM
					major
				WHERE
					major_no = r.major_no
			) AS major
			, (
				SELECT
					user_name
				FROM
					user
				WHERE
					user_no = r.user_no
			) AS user_name
			, (
				SELECT
					user_nick
				FROM
					user
				WHERE
					user_no = r.user_no
			) AS user_nick
		FROM
			reservation r
		WHERE				
			gd_no = #{gd_no} 
			AND reserve_cancel = 1
	</select>
	
	<!-- 유저 결제 내역 -->
	<select id="userPayHistory" resultType="com.plant.reserve.ReserveVO" parameterType="com.plant.reserve.ReserveVO">
		SELECT
			pay_no
			, reserve_no
			, pay_date
			, pay_size
			, gd_no
			, user_no
			, buyer_name
			, buyer_addr
			, buyer_postcode
			, buyer_email
			, buyer_tel
			, merchant_uid
			, pay_method
			, reserve_cancel
			, (
				SELECT
					reserve_completion
				FROM
					reservation
				WHERE
					reserve_no = p.reserve_no
			) AS reserve_completion
		FROM
			pay p
		WHERE 
			user_no = #{user_no}
	</select>
	
	<!-- 가드너 결제 내역 -->
	<select id="gdPayHistory" resultType="com.plant.reserve.ReserveVO" parameterType="com.plant.reserve.ReserveVO">
		SELECT
			pay_no
			, reserve_no
			, pay_date
			, pay_size
			, gd_no
			, user_no
			, buyer_name
			, buyer_addr
			, buyer_postcode
			, buyer_email
			, buyer_tel
			, merchant_uid
			, pay_method
			, reserve_cancel
		FROM
			pay
		WHERE 
			gd_no = #{gd_no}
	</select>
	
	<!-- 유저 결제 내역 중복제거-->
	<select id="userPayHistoryDeduplication" resultType="com.plant.reserve.ReserveVO" parameterType="com.plant.reserve.ReserveVO">
		SELECT
			merchant_uid
			, ANY_VALUE(pay_no) as pay_no
			, ANY_VALUE(pay_date) as pay_date
			, ANY_VALUE(pay_size) as pay_size
			, ANY_VALUE(gd_no) as gd_no
  			, ANY_VALUE(user_no) as user_no
			, ANY_VALUE(buyer_name) as buyer_name
			, ANY_VALUE(buyer_addr) as buyer_addr
			, ANY_VALUE(buyer_postcode) as buyer_postcode
			, ANY_VALUE(buyer_email) as buyer_email
			, ANY_VALUE(buyer_tel) as buyer_tel
			, ANY_VALUE(pay_method) as pay_method
			, ANY_VALUE(reserve_cancel) as reserve_cancel
		FROM
			pay
		WHERE
			user_no = #{user_no}
		GROUP BY merchant_uid
		ORDER BY ANY_VALUE(pay_date) DESC
	</select>
	
	<!-- 예약가능 일자 입력 -->
	<insert id="insertReservable" parameterType="com.plant.reserve.ReserveVO">
		INSERT INTO 
			reservable(
				gd_no,
				reservable_date,
				reservable_hour,
				reservable_time
			) VALUES (
				#{gd_no},
				#{reservable_date},
				#{reservable_hour},
				NOW()
			)
		<selectKey resultType="int" keyProperty="reservable_no" order="AFTER">
        	SELECT LAST_INSERT_ID()
    	</selectKey>     
	</insert>
	
	<!-- 예약가능 여부 업데이트 -->
	<update id="updateReservable" parameterType="com.plant.reserve.ReserveVO">
		UPDATE 
			reservable 
		SET
			reservable_do = #{reservable_do} 
		WHERE
			reservable_no = 
			(
				SELECT 
					reservable_no
				FROM
					reservation
				WHERE
					reserve_no = #{reserve_no}
			) 
	</update>
	
	<!-- 예약 취소 여부 업데이트 -->
	<update id="updateReservationCancel" parameterType="com.plant.reserve.ReserveVO">
		UPDATE 
			reservation 
		SET
			reserve_cancel = #{reserve_cancel} 
		WHERE
			reserve_no = #{reserve_no}
	</update>
	
	<!-- 결제 취소 여부 업데이트 -->
	<update id="updatePayCancel" parameterType="com.plant.reserve.ReserveVO">
		UPDATE 
			pay 
		SET
			reserve_cancel = #{reserve_cancel} 
		WHERE
			reserve_no = #{reserve_no}
	</update>
	
	<!-- 예약가능 시간 변경 -->
	<update id="changeReservable" parameterType="com.plant.reserve.ReserveVO">
		UPDATE 
			reservable
		SET  
			reservable_hour = #{reservable_hour},
			reservable_time = NOW()
		WHERE 
			reservable_no = #{reservable_no}
	</update>
	
	<!-- 케어가능한 종목 변경 -->
	<update id="changeReservableMajor" parameterType="com.plant.reserve.ReserveVO">
		UPDATE 
			reservableMajor
		SET 
			reservable_major = #{reservable_major} 
		WHERE
			reservable_no = #{reservable_no}
	</update>
	
	<!-- 케어가능한 종목 추가 -->
	<insert id="insertReservableMajor" parameterType="com.plant.reserve.ReserveVO">
		INSERT INTO 
			reservableMajor(
				reservable_no,
				reservable_major
			) VALUES (
				#{reservable_no},
				#{reservable_major}
			)
	</insert>
	
	
	<!-- 예약 추가 -->
	<insert id="insertReservation" parameterType="com.plant.reserve.ReserveVO">
		INSERT INTO 
			reservation(
				reservable_no,
				gd_no,
				user_no,
				reserve_date,
				reserve_hour,
				reserve_etc,
				reserve_time,
				major_no
			) VALUES (
				#{reservable_no},
				#{gd_no},
				#{user_no},
				(
					SELECT 
						reservable_date
					FROM 
						reservable
					WHERE 
						reservable_no = #{reservable_no} 
				),
				(
					SELECT 
						reservable_hour
					FROM 
						reservable
					WHERE 
						reservable_no = #{reservable_no} 
				),
				#{reserve_etc},
				NOW(),
				(
					SELECT
						major_no
					FROM 
						major
					WHERE
						major = 
						(
						SELECT
							rm.reservable_major
						FROM 
							reservable r
						INNER JOIN 
							reservableMajor rm 
						ON 
							r.reservable_no = rm.reservable_no 
						WHERE 
							r.reservable_no = #{reservable_no} 
						)
				)
			)
			<selectKey resultType="int" keyProperty="reserve_no" order="AFTER">
        		SELECT LAST_INSERT_ID()
    		</selectKey>     
	</insert>
	
	<!-- 예약 시간 변경 -->
	<update id="changeReservation" parameterType="com.plant.reserve.ReserveVO">
		UPDATE 
			reservation
		SET  
			reserve_hour = #{reserve_hour},
			major_no = #{major_no},
			reserve_time = NOW()
		WHERE 
			reserve_date = #{reserve_date} AND reserve_no = #{reserve_no}
	</update>
	
	<!-- 예약 결제여부 및 특이사항 추가 -->
	<update id="updateReservation" parameterType="com.plant.reserve.ReserveVO">
		UPDATE 
			reservation
		SET  
			reserve_pay = #{reserve_pay}
			, reserve_etc = #{reserve_etc}
		WHERE 
			reserve_no = #{reserve_no}
	</update>
	
	<!-- 취소내역 추가 -->
	<insert id="insertCancel" parameterType="com.plant.reserve.ReserveVO">
		INSERT INTO 
			cancel(
				reserve_no,
				gd_no,
				user_no,
				cancel_date,
				cancel_comment,
				cancel_type
			) VALUES (
				#{reserve_no},
				#{gd_no},
				#{user_no},
				NOW(),
				#{cancel_comment},
				#{cancel_type}
			)
	</insert>
	
	<!-- 리뷰 추가 -->
	<insert id="insertReview" parameterType="com.plant.reserve.ReserveVO">
		INSERT INTO 
			review(
				reserve_no,
				gd_no,
				user_no,
				review_date,
				review,
				star
			) VALUES (
				#{reserve_no},
				#{gd_no},
				#{user_no},
				NOW(),
				#{review},
				#{star}
			)
	</insert>
	
	<!-- 리뷰 답변 입력 -->
	<update id="answerReview" parameterType="com.plant.reserve.ReserveVO">
		UPDATE 
			review
		SET
			review_answer = #{review_answer},
			review_answerdate = NOW()
		WHERE
			review_no = #{review_no}
	</update>
	
	<!-- 1:1문의 -->
	<insert id="insertInquiry" parameterType="com.plant.reserve.ReserveVO">
		INSERT INTO 
			inquiry(
				reserve_no,
				gd_no,
				user_no,
				inquiry_date,
				inquiry
			) VALUES (
				#{reserve_no},
				#{gd_no},
				#{user_no},
				NOW(),
				#{inquiry}
			)
	</insert>
	
	<!-- 1:1 문의 답변 -->
	<update id="answerInquiry" parameterType="com.plant.reserve.ReserveVO">
		UPDATE
			inquiry 
		SET
			inquiry_answer = #{inquiry_answer},
			inquiry_answerdate = NOW()
		WHERE 
			inquiry_no = #{inquiry_no}
	</update>
	
	<!-- 결제내역 입력 -->
	<insert id="insertPay" parameterType="com.plant.reserve.ReserveVO">
		INSERT INTO 
			pay(
				reserve_no
				, pay_date
				, pay_size
				, gd_no
				, user_no
				, buyer_name
				, buyer_addr
				, buyer_postcode
				, buyer_email
				, buyer_tel
				, merchant_uid
				, pay_method
			) VALUES (
				#{reserve_no}
				, NOW()
				, #{pay_size}
				, #{gd_no}
				, #{user_no}
				, #{buyer_name}
				, #{buyer_addr}
				, #{buyer_postcode}
				, #{buyer_email}
				, #{buyer_tel}
				, #{merchant_uid}
				, #{pay_method}
			)
	</insert>
	
	<!-- 예약가능 일정 삭제 -->
	<delete id="deleteReservable" parameterType="com.plant.reserve.ReserveVO">
		DELETE FROM 
			reservable
		WHERE
			reservable_no = #{reservable_no}
	</delete>
	
	<!-- 예약가능 종목 삭제 -->
	<delete id="deleteReservableMajor" parameterType="com.plant.reserve.ReserveVO">
		DELETE FROM 
			reservableMajor
		WHERE
			reservable_no = #{reservable_no}
	</delete>
	
	<!-- 케어 진행된 종목 찾기 -->
	<select id="selectCompletionGd" resultType="com.plant.reserve.ReserveVO" parameterType="com.plant.reserve.ReserveVO">
		SELECT 
			r.reserve_no
			, r.gd_no
			, r.user_no
			, (
				SELECT
					user_name
				FROM
					user
				WHERE
					user_no = r.user_no
			) AS user_name
			, (
				SELECT
					user_nick
				FROM
					user
				WHERE
					user_no = r.user_no
			) AS user_nick
			, (
				SELECT
					major
				FROM
					major
				WHERE
					major_no = r.major_no
			) AS major
			, (
                SELECT
                    merchant_uid
                FROM
                	pay
                WHERE
                	reserve_no = r.reserve_no
            ) AS merchant_uid
			, r.reserve_date
			, r.reserve_hour
			, r.reserve_time
			, r.reserve_review
			, c.completion_date
			, c.completion_comment
			, c.completion_picorg1
			, c.completion_picreal1
			, c.completion_picorg2
			, c.completion_picreal2
			, c.completion_picorg3
			, c.completion_picreal3
		FROM 
			reservation r
		INNER JOIN 
			completion c 
		ON 
			r.reserve_no = c.reserve_no 
		WHERE 
			r.gd_no = #{gd_no}
			AND r.reserve_pay = 1
			AND r.reserve_cancel = 0
			AND r.reserve_completion = 1
	</select>
	
	<!-- 케어 진행된 종목 찾기 -->
	<select id="selectCompletionUser" resultType="com.plant.reserve.ReserveVO" parameterType="com.plant.reserve.ReserveVO">
		SELECT 
			r.reserve_no
			, r.gd_no
			, (
				SELECT
					gd_name
				FROM
					gd
				WHERE
					gd_no = r.gd_no
			) AS gd_name
			, r.user_no
			, (
				SELECT
					user_name
				FROM
					user
				WHERE
					user_no = r.user_no
			) AS user_name
			, (
				SELECT
					user_nick
				FROM
					user
				WHERE
					user_no = r.user_no
			) AS user_nick
			, (
				SELECT
					major
				FROM
					major
				WHERE
					major_no = r.major_no
			) AS major
			, r.reserve_date
			, r.reserve_hour
			, r.reserve_time
			, c.completion_date
			, c.completion_comment
			, c.completion_picorg1
			, c.completion_picreal1
			, c.completion_picorg2
			, c.completion_picreal2
			, c.completion_picorg3
			, c.completion_picreal3
			, r.reserve_review
		FROM 
			reservation r
		INNER JOIN 
			completion c 
		ON 
			r.reserve_no = c.reserve_no 
		WHERE 
			r.user_no = #{user_no}
			AND r.reserve_pay = 1
			AND r.reserve_cancel = 0
			AND r.reserve_completion = 1
	</select>
	
	<!-- 케어 진행되지 않은 종목 찾기 -->
	<select id="selectNoCompletion" resultType="com.plant.reserve.ReserveVO" parameterType="com.plant.reserve.ReserveVO">
		SELECT 
			reserve_no
			, gd_no
			, user_no
			, (
				SELECT
					user_name
				FROM
					user
				WHERE
					user_no = r.user_no
			) AS user_name
			, (
				SELECT
					user_nick
				FROM
					user
				WHERE
					user_no = r.user_no
			) AS user_nick
			, (
				SELECT
					major
				FROM
					major
				WHERE
					major_no = r.major_no
			) AS major
			, (
                SELECT
                    merchant_uid
                FROM
                	pay
                WHERE
                	reserve_no = r.reserve_no
            ) AS merchant_uid
			, reserve_date
			, reserve_hour
			, reserve_time
		FROM 
			reservation r
		WHERE 
			gd_no = #{gd_no}
			AND reserve_pay = 1
			AND reserve_cancel = 0
			AND reserve_completion = 0
	</select>
	
	<!-- 케어 진행 완료 여부 입력 -->
	<update id="updateCompletion" parameterType="com.plant.reserve.ReserveVO">
		UPDATE
			reservation 
		SET
			reserve_completion = 1
		WHERE 
			reserve_no = #{reserve_no}
			AND gd_no = #{gd_no}
			AND reserve_pay = 1
			AND reserve_cancel = 0
	</update>
	
	<!-- 케어 진행 내용 입력 -->
	<insert id="insertCompletion" parameterType="com.plant.reserve.ReserveVO">
		INSERT INTO 
			completion(
				user_no
				, gd_no
				, reserve_no
				, completion_date
				, completion_comment
				<if test="completion_picreal1 != null and completion_picreal1 !=''">
					, completion_picorg1
					, completion_picreal1
				</if>
				<if test="completion_picreal2 != null and completion_picreal2 !=''">
					, completion_picorg2
					, completion_picreal2
				</if>
				<if test="completion_picreal3 != null and completion_picreal3 !=''">
					, completion_picorg3
					, completion_picreal3
				</if>
			) VALUES (
				#{user_no}
				, #{gd_no}
				, #{reserve_no}
				, NOW()
				, #{completion_comment}
				<if test="completion_picreal1 != null and completion_picreal1 !=''">
					, #{completion_picorg1}
					, #{completion_picreal1}
				</if>
				<if test="completion_picreal2 != null and completion_picreal2 !=''">
					, #{completion_picorg2}
					, #{completion_picreal2}
				</if>
				<if test="completion_picreal3 != null and completion_picreal3 !=''">
					, #{completion_picorg3}
					, #{completion_picreal3}
				</if>
			)
	</insert>
	
	<!-- 리뷰 등록 여부 업데이트 -->
	<update id="updateRservationReview" parameterType="com.plant.reserve.ReserveVO">
		UPDATE
			reservation 
		SET
			reserve_review = 1
		WHERE 
			reserve_no = #{reserve_no}
			AND user_no = #{user_no}
	</update>
	
	<!-- 유저 리뷰 검색 -->
	<select id="selectUserReview" resultType="com.plant.reserve.ReserveVO" parameterType="com.plant.reserve.ReserveVO">
		SELECT 
			review_no
			, reserve_no
			, review_date
			, review
			, review_answer
			, review_answerdate
			, star
			, user_no
			, gd_no
			, (
				SELECT
					gd_name
				FROM
					gd
				WHERE
					gd_no = r.gd_no
			) AS gd_name
		FROM
			review r
		WHERE
			user_no = #{user_no}
	</select>
	
	<!-- 가드너 리뷰 검색 -->
	<select id="selectGdReview" resultType="com.plant.reserve.ReserveVO" parameterType="com.plant.reserve.ReserveVO">
		SELECT 
			review_no
			, reserve_no
			, review_date
			, review
			, review_answer
			, review_answerdate
			, star
			, user_no
			, gd_no
		FROM
			review r
		WHERE
			gd_no = #{gd_no}
	</select>
	
	<!-- 가드너 취소 내역 -->
	<select id="selectGdCancel" resultType="com.plant.reserve.ReserveVO" parameterType="com.plant.reserve.ReserveVO">
		SELECT
			cancel_no
			, user_no
			,(
				SELECT
					user_nick
				FROM
					user
				WHERE
					user_no = c.user_no
			) AS user_nick
			,(
				SELECT
					user_name
				FROM
					user
				WHERE
					user_no = c.user_no
			) AS user_name
			, gd_no
			, reserve_no
			, cancel_date
			, cancel_comment
		FROM
			cancel c
		WHERE 
			gd_no = #{gd_no}
	</select>
	
	<!-- 가드너 자격사항 -->
	<select id="selectGdCertificate" resultType="com.plant.reserve.ReserveVO" parameterType="com.plant.reserve.ReserveVO">
		SELECT
			gd_no
			, gd_certificate
		FROM
			cer
		WHERE
			gd_no = #{gd_no}
	</select>
	
	<!-- 가드너 이력 -->
	<select id="selectGdCareer" resultType="com.plant.reserve.ReserveVO" parameterType="com.plant.reserve.ReserveVO">
		SELECT
			gd_no
			, gd_career
		FROM
			car
		WHERE
			gd_no = #{gd_no}
	</select>
</mapper>